@charset "UTF-8";
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
/**
* Mixin for inline-block that is backwards compatible up to ie7
**/
/**
* Clearfix Mixin off Nicolas Gallagher supporting all the way down to ie6
**/
/**
* Setting a font-family stack so that you only have to include the font that you want, with the fallback fonts already defined.
**/
/**
* Border Radius when all borders are equal
**/
/**
* Targeting individual border radiuses for when different radiuses are needed.
**/
/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn’t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */
/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
.informative {
  cursor: help !important;
}

/**
 * Mute an object by reducing its opacity.
 */
.muted {
  opacity: 0.5 !important;
  filter: alpha(opacity=50) !important;
}

/**
 * Align items to the right where they imply progression/movement forward, e.g.:
 *
   <p class=proceed><a href=#>Read more...</a></p>
 *
 */
.proceed {
  text-align: right !important;
}

/**
 * Add a right-angled quote to links that imply movement, e.g.:
 *
   <a href=# class=go>Read more</a>
 *
 */
.go:after {
  content: " " "»" !important;
}

/**
 * Apply capital case to an element (usually a `strong`).
 */
.caps {
  text-transform: uppercase !important;
}

/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
.accessibility,
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
}

/*
 * Hide visually and from screen readers:
 * http://juicystudio.com/article/screen-readers-display-none.php
 */
.hidden {
  display: none !important;
  visibility: hidden;
}

.clearfix {
  *zoom: 1;
}
.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}
.clearfix:after {
  clear: both;
}

/*------------------------------------*\
    $RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart...
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
* Let’s make the box model all nice, shall we...?
*/
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}

/**
 * The usual...
 */
/* h1,h2,h3,h4,h5,h6,
p,blockquote,pre,
dl,dd,ol,ul,
form,fieldset,legend,
table,th,td,caption,
hr{
    margin:0;
    padding:0;
} */
/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title], dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u, ins {
  text-decoration: none;
}

/**
 * Apply faux underline via `border-bottom`.
 */
ins {
  border-bottom: 1px solid;
}

/**
 * So that `alt` text is visually offset if images don’t load.
 */
img {
  font-style: italic;
}

/**
 * Give form elements some cursor interactions...
 */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer;
}

.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
}

.html-element {
  position: absolute;
  background: none;
  /* Make sure events are propagated to the JointJS element so, e.g. dragging works.*/
  pointer-events: none;
  -webkit-user-select: none;
  padding: 5px;
  box-sizing: border-box;
  z-index: 2;
}
.html-element select,
.html-element input,
.html-element button,
.html-element textarea {
  /* Enable interacting with inputs only. */
  pointer-events: auto;
}
.html-element button.delete {
  display: none;
  color: white;
  border: none;
  background-color: #C0392B;
  border-radius: 20px;
  width: 15px;
  height: 15px;
  line-height: 15px;
  text-align: middle;
  position: absolute;
  top: -15px;
  left: -15px;
  padding: 0;
  margin: 0;
  font-weight: bold;
  cursor: pointer;
}
.html-element button.delete:hover {
  width: 20px;
  height: 20px;
  line-height: 20px;
}
.html-element select {
  position: absolute;
  right: 2px;
  bottom: 28px;
}
.html-element input {
  position: absolute;
  background: none;
  bottom: 0;
  left: 0;
  right: 0;
  border: none;
  color: #000;
  padding: 5px;
  height: 40px;
  font-size: 11px;
  width: 100%;
}
.html-element textarea {
  position: absolute;
  background: none;
  bottom: 20px;
  left: 0;
  right: 0;
  border: 1px solid #ccc;
  color: #000;
  font-size: 11px;
  height: 100px;
  width: 100%;
}
.html-element label {
  color: #000;
}
.html-element span {
  position: absolute;
  top: 2px;
  right: 9px;
  color: white;
  font-size: 10px;
  display: none;
}

.rectangle {
  position: absolute;
  border: 4px solid black;
}

html, body {
  font-family: 'Varela Round', sans-serif;
  font-size: 16px;
}

body {
  background-color: #99ccff;
}

header .testMode {
  position: fixed;
  right: 10px;
  top: 10px;
}
header h1 {
  position: fixed;
  left: 50%;
  margin-left: -76px;
  top: 10px;
  text-align: center;
}
header input.reportTitle {
  width: 100%;
  border: none;
  -webkit-appearance: none;
  text-align: center;
  font-size: 1.25em;
  position: fixed;
  top: 70px;
  left: 0;
  background: none;
}
header select#reportCategory {
  width: 175px;
  position: fixed;
  left: 50%;
  top: 100px;
  margin-left: -85px;
}

div.formPanelControls {
  position: fixed;
  display: block;
  padding: 5px;
  width: 275px;
  bottom: -170px;
  left: 10px;
  background-color: rgba(58, 88, 97, 0.5);
  color: white;
  font-size: 1.1em;
  border-radius: 4px;
}
div.formPanelControls h3 {
  color: #111111;
}

form {
  position: fixed;
  background-color: rgba(58, 88, 97, 0.5);
  color: white;
  font-size: 1.1em;
  border-radius: 8px;
}
form.formReportOptions {
  display: block;
  padding: 5px;
  width: 275px;
  top: 40px;
  left: 10px;
}
form.formSectionOptions {
  display: block;
  padding: 5px;
  width: 275px;
  top: 210px;
  left: 10px;
}
form.formQuestionOptions {
  display: block;
  padding: 5px;
  width: 275px;
  top: 362px;
  left: 10px;
}
form.formAnswerOptions {
  display: block;
  padding: 5px;
  width: 275px;
  top: 40px;
  right: 10px;
}
form.formContentOptions {
  display: block;
  padding: 5px;
  width: 275px;
  bottom: 10px;
  right: 10px;
}
form h3 {
  color: #111111;
  margin: 5px 0;
}
form input {
  font-family: 'Varela Round', sans-serif;
  padding: 3px 2px;
  font-size: 1.1em;
  color: #555;
  border: none;
  border-radius: 2px;
  background-color: #CFF6F4;
}
form textarea {
  font-family: 'Varela Round', sans-serif;
  padding: 3px 2px;
  width: 100%;
  font-size: 1.1em;
  color: #555;
  border: none;
  border-radius: 2px;
  background-color: #cff6f4;
}
form button {
  width: 100%;
  padding: 10px;
  border-radius: 2px;
  border: none;
  color: white;
  background-color: #222;
  margin: 2px 0 0 0;
  font-family: 'Varela Round', sans-serif;
  font-size: 1.1em;
}
form label {
  display: block;
  font-size: .75em;
}
form div.form-controls {
  *zoom: 1;
  padding: 5px 0;
}
form div.form-controls:before, form div.form-controls:after {
  content: " ";
  display: table;
}
form div.form-controls:after {
  clear: both;
}
form select {
  width: 200px;
}
form div.form-controls--width-half {
  width: 50%;
  display: -moz-inline-stack;
  display: inline-block;
  vertical-align: top;
  zoom: 1;
  *display: inline;
  box-sizing: border-box;
  padding-right: 30px;
}
form div.form-controls--width-half input {
  width: 75px;
}
form .pull-left {
  float: left;
}
form .pull-right {
  float: right;
}
form.jointTestControls {
  position: absolute;
  top: 800px;
}

div#navigator {
  position: absolute;
  right: 0;
  top: 0;
}

input[type='button'] {
  padding: 10px;
  margin: 10px;
}

div.alert {
  position: absolute;
  top: 0;
  left: 0;
  padding: 5px;
}

/* jointjs elements */
.element.Path path {
  fill: #ecf0f1;
  stroke: #333333;
  stroke-width: 1px;
}

.element.Path:hover path {
  fill: #effff1;
}

.element.Path text {
  fill: #333333;
  font-weight: 800;
}

/* svg */
.bbox {
  stroke: #16a085;
  stroke-width: 2;
  stroke-opacity: 0;
  fill: none;
  transition-property: stroke-opacity;
  transition-duration: 0.5s;
  pointer-events: none;
}

.axis {
  stroke: #95a5a6;
  stroke-dasharray: 2,4;
  stroke-width: 1;
  pointer-events: none;
}

.padding {
  stroke: #1abc9c;
  stroke-opacity: 0;
  transition-property: stroke-opacity;
  transition-duration: 1s;
  pointer-events: none;
}

.grid {
  stroke: #16a085;
  stroke-width: 0.5;
  stroke-opacity: 0;
  transition-property: stroke-opacity;
  transition-duration: 1s;
  pointer-events: none;
}

.active {
  stroke-opacity: 0.5;
}

.padding.active, .bbox.active {
  stroke-opacity: 0.2;
}

/* IE can't handle paths without the `d` attribute for bounding box calculation */
.marker-source, .marker-target {
  display: none;
}

/*# sourceMappingURL=kards.css.map */
